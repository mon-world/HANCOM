# 최대 5자리 양수에서 가장 큰 자릿수를 찾는 함수를 만드세요
# 62495 -> 9

# 앞쪽 절반을 출력하세요 (리스트 슬라이싱)
# 뒤쪽 절반을 출력하세요

# 짝수 번째만 출력하세요 (리스트 슬라이싱)
# 홀수 번째만 출력하세요

# 거꾸로 뒤집으세요

# 0~9까지의 정수를 while문으로 출력하세요

# input 함수로 0을 입력할 때까지의 합계를 구하세요 (while문, break문 사용)
# (break문은 반복문을 탈출할 때 사용합니다)

# --------------------------------------------- #

# 아래 코드를 반복문으로 바꾸세요
# print('*****')
# print('*****')
# print('*****')
# print('*****')

# 위의 코드에서 반복문 안쪽의 print 함수를 반복문으로 바꿔보세요

# 아래와 같은 모양으로 출력하는 함수를 작성하세요 (triangle_1)
#   0123
# 0 *---
# 1 **--
# 2 ***-
# 3 ****

# 아래와 같은 모양으로 출력하는 함수를 작성하세요 (triangle_2)
# ****
# ***
# **
# *

# 아래와 같은 모양으로 출력하는 함수를 작성하세요 (triangle_3)
#    *
#   **
#  ***
# ****

# 아래와 같은 모양으로 출력하는 함수를 작성하세요 (triangle_4)
# ****
#  ***
#   **
#    *

# --------------------------------------------- #

# 매개 변수를 3개 받는 함수를 만들고, 여러 가지 방법으로 호출해 보세요

# 기본 인자를 3개 받는 함수를 여러 가지 방법으로 호출해 보세요

# 가변인자를 매개변수로 받는 함수를 만들고, 여러 가지 방법으로 호출해 보세요

# --------------------------------------------- #

# 리스트에서 가장 큰 값과 가장 작은 값을 반환하는 함수를 만드세요 (find_min_max)

# 아래처럼 출력하는 코드를 만드세요 (반복문 2개)
#  0  1  2  3  4
#  5  6  7  8  9
# 10 11 12 13 14
# 15 16 17 18 19
# 20 21 22 23 24

# 문자열 리스트에 들어있는 문자열 전체 길이를 구하는 함수를 만드세요
a = ['book', 'sea', 'mouse']

# 정수 2차원 리스트로부터 가장 큰 값을 찾는 함수를 만드세요 (find_max_from_2d)
b = [[3, 5], [9, 1, 4, 8], [6, 2, 7]]

# poem.txt 파일을 읽어오는 함수를 만드세요

# --------------------------------------------- #

# 앞에서 만든 파일 읽기 함수를 파일을 읽어서 반환하는 함수로 수정하세요 (내용 전체가 포함된 문자열 1개)

# 앞에서 만든 파일 읽기 함수를 파일을 읽어서 반환하는 함수로 수정하세요 (내용 전체가 포함된 문자열 리스트)

# 1차원 리스트에 포함된 숫자들의 빈도를 구하세요

# 1차원 리스트로부터 중복된 숫자를 모두 제거하세요

# --------------------------------------------- #

# 딕셔너리의 keys 함수를 반복문과 연동하세요

# 딕셔너리의 items 함수를 반복문과 연동하세요

# 딕셔너리의 items 함수를 반복문과 연동해서 아래처럼 출력하세요
# 0 name kim
# 1 age 25
# 2 hobby climbing

